import { MedicalHistory } from "../models/MedicalHistory.js";
import { audioProcessingService } from "../services/audioProcessing.js";

// Get medical history for a user
export const getMedicalHistory = async (req, res) => {
  try {
    const medicalHistory = await MedicalHistory.findByUserId(req.user.id);
    res.json(medicalHistory.map((record) => record.toJSON()));
  } catch (error) {
    console.error("Error fetching medical history:", error);
    res.status(500).json({ message: "Server error" });
  }
};

// Create new medical history entry
export const createMedicalHistory = async (req, res) => {
  try {
    const { symptoms, diagnosis, prescription, doctorNotes, languageUsed } =
      req.body;

    const medicalHistory = await MedicalHistory.create({
      userId: req.user.id,
      symptoms,
      diagnosis,
      prescription,
      doctorNotes,
      languageUsed,
    });

    res.status(201).json(medicalHistory.toJSON());
  } catch (error) {
    console.error("Error creating medical history:", error);
    res.status(500).json({ message: "Server error" });
  }
};

// Process audio consultation
export const processAudioConsultation = async (req, res) => {
  try {
    // Get audio file from request
    const audioFile = req.file;
    if (!audioFile) {
      return res.status(400).json({ message: "No audio file provided" });
    }

    // Process audio using our service
    const { transcript, detectedLanguage, englishTranslation } =
      await audioProcessingService.processAudio(
        audioFile.buffer,
        audioFile.mimetype
      );

    // Save medical history with the processed information
    const medicalHistory = await MedicalHistory.create({
      userId: req.user.id,
      symptoms: transcript,
      diagnosis: "Pending analysis", // This would be generated by AI
      prescription: "To be determined by doctor",
      doctorNotes: englishTranslation,
      languageUsed: detectedLanguage,
      transcription: transcript,
    });

    // Return processed data
    res.json({
      transcript,
      detectedLanguage,
      englishTranslation,
      medicalHistoryId: medicalHistory.id,
    });
  } catch (error) {
    console.error("Error processing audio consultation:", error);
    res.status(500).json({ message: "Server error" });
  }
};
